name: Test wf
on:
  pull_request:
    branches: ['main']
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      # action: ${{ steps.out_step.outputs.action }}
      action: ${{ env.action }}
    steps:
      - name: First step
        run: |
          echo "[info] This is setup job."
          exit 0

      - name: Out step
        id: out_step
        run: |
          # echo "::set-output name=action::skip"
          echo "action=execute" >> $GITHUB_ENV

      - name: Last step
        if: always()
        run: |
          echo "[info] last processing."

  build:
    needs: setup
    if: ${{ needs.setup.outputs.action == 'execute' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        env: ['build-1', 'build-2']
    steps:
      - name: Build
        run: |
          echo "[info] This is build job."
          if [ ${{ matrix.env == 'build-2' }} ]; then
            exit 1
          fi
          exit 0

      - name: Last step
        if: always()
        run: |
          echo "[info] last processing."

  result:
    needs: [setup, build]
    if: ${{ needs.build.result == 'success' || needs.build.result != 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Wait step
        run: |
          echo "[info] This is build job."
          sleep 30

      - name: Second step
        continue-on-error: true
        run: |
          echo "[info] Second step."
          exit 0

      - name: Check job results
        if: always()
        run: |
          echo '${{ toJSON(needs) }}' | jq 'to_entries | map(.key + " " + .value.result) | join(" - ")'
          if [ ${{ needs.setup.result}} != 'success' ]; then
            echo "[info] Setup job is not success."
            exit 1
          fi
          if [ ${{ needs.build.result }} != 'success' ]; then
            echo "[info] Build job is not success."
            exit 1
          fi
          echo "[info] All jobs success."
